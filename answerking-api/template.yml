AWSTemplateFormatVersion: '2010-09-09'
Description: AnswerKing API
Transform: AWS::Serverless-2016-10-31 # Tell AWS treat this file as a SAM template

Parameters:
  DeployedByTag:
    Description: Standard deploy tag
    Type: String
    Default: Muaaz

Resources:
  GetCategoriesFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: categories/view_categories.lambda_handler
      Runtime: python3.13
      Events:
        ApiGet:
          Type: Api
          Properties:
            Path: /categories
            Method: GET
      Policies:
        - DynamoDBReadPolicy:
            TableName: Categories
    Tags:
        - Key: Project
          Value: AnswerKing
        - Key: deployed-by
          Value: !Ref DeployedByTag

  GetItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: items/view_item.lambda_handler
      Runtime: python3.13
      Events:
        ApiGet:
          Type: Api
          Properties:
            Path: /items
            Method: GET
      Policies:
        - DynamoDBReadPolicy:
            TableName: Items
    Tags:
        - Key: Project
          Value: AnswerKing
        - Key: deployed-by
          Value: !Ref DeployedByTag

  CreateItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: items/create_item.lambda_handler
      Runtime: python3.13
      Environment:
        Variables:
          ITEMS_TABLE: Items
      Events:
        CreateItemAPI:
          Type: Api
          Properties:
            Path: /items
            Method: POST
      Policies:
      - DynamoDBWritePolicy:
          TableName: Items
    Tags:
        - Key: Project
          Value: AnswerKing
        - Key: deployed-by
          Value: !Ref DeployedByTag

  DeleteItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: items/delete_item.lambda_handler
      Runtime: python3.13
      Environment:
        Variables:
          ITEMS_TABLE: Items
      Events:
        DeleteItemAPI:
          Type: Api
          Properties:
            Path: /items/{id}
            Method: DELETE
      Policies:
      - DynamoDBCrudPolicy:
          TableName: Items
    Tags:
        - Key: Project
          Value: AnswerKing
        - Key: deployed-by
          Value: !Ref DeployedByTag

  CreateCategoryFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: categories/create_categories.lambda_handler
      Runtime: python3.13
      Environment:
        Variables:
          CATEGORIES_TABLE: Categories
      Events:
        CreateCategoryAPI:
          Type: Api
          Properties:
            Path: /categories
            Method: POST
      Policies:
      - DynamoDBWritePolicy:
          TableName: Categories
    Tags:
        - Key: Project
          Value: AnswerKing
        - Key: deployed-by
          Value: !Ref DeployedByTag

  DeleteCategoryFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: categories/delete_categories.lambda_handler
      Runtime: python3.13
      Environment:
        Variables:
          CATEGORIES_TABLE: Categories
      Events:
        DeleteCategoryAPI:
          Type: Api
          Properties:
            Path: /categories/{id}
            Method: DELETE
      Policies:
      - DynamoDBCrudPolicy:
          TableName: Categories
    Tags:
        - Key: Project
          Value: AnswerKing
        - Key: deployed-by
          Value: !Ref DeployedByTag

  UpdateItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: items/update_items.lambda_handler
      Runtime: python3.13
      Environment:
        Variables:
          ITEMS_TABLE: Items
      Events:
        UpdateItemAPI:
          Type: Api
          Properties:
            Path: /items/{id}
            Method: PUT
      Policies:
        - DynamoDBCrudPolicy:
            TableName: Items 

  UpdateCategoryFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: categories/update_categories.lambda_handler
      Runtime: python3.13
      Environment:
        Variables:
          CATEGORIES_TABLE: Categories
      Events:
        UpdateCategoryAPI:
          Type: Api
          Properties:
            Path: /categories/{id}
            Method: PUT
      Policies:
        - DynamoDBCrudPolicy:
            TableName: Categories 

Outputs:
  ViewCategoriesApi:
    Description: "API Gateway endpoint URL for listing all categories // GET"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/categories"

  ViewItemsApiUrl:
    Description: "API Gateway endpoint URL for listing all items // GET"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/items"

  CreateItemsApiUrl:
    Description: "API Gateway endpoint URL for creating items // POST"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/items"

  DeleteItemsUrl:
    Description: "API Gateway endpoint URL for deleting an item // DELETE"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/items/{id}"

  CreateCategoryApiUrl:
    Description: "API Gateway endpoint URL for creating categories // POST"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/categories"

  DeleteCategoriesUrl:
    Description: "API Gateway endpoint URL for deleting a category // DELETE"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/categories/{id}"

  UpdateItemsUrl:
    Description: "API Gateway endpoint URL for updating an item // PUT"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/items/{id}"

  UpdateCategoriesUrl:
    Description: "API Gateway endpoint URL for updating a category // PUT"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/categories/{id}"